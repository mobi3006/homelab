export red='\033[0;31;7m'
export green='\033[0;32m'
export yellow='\033[1;33m'
export purple='\033[1;35m'
export cyan='\033[1;36m'
export color_off='\033[0m'

###################################################################################################
# functions to reuse
#
info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

print_yellow () {
  printf "${yellow}$1${color_off}\n"
}

execute() {
  usage ${_example}
  if [ "${_docu}" != "" ]; then
    echo "docu: ${_docu}"
  fi

  # execution
  if [ "${_help_indicator}" != "help" ]; then
    printf "\r${cyan}${_command}${color_off}\n"
    _result=`eval ${_command}`
  fi

  echo ${_result}
}

# ln -s $dst  
link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=
  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" = "false" ] && [ "$backup_all" = "false" ] && [ "$skip_all" = "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" = "$src" ]
      then

        skip=true;

      else

        user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" = "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" = "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" = "true" ]
    then
      info "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$src" "$dst"
    success "linked: $dst ==> $src"
  fi
}
