export red='\033[0;31;7m'
export green='\033[0;32m'
export yellow='\033[1;33m'
export purple='\033[1;35m'
export cyan='\033[1;36m'
export color_off='\033[0m'

###################################################################################################
# functions to reuse
#
info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

print_yellow () {
  printf "${yellow}$1${color_off}\n"
}

execute() {
  usage ${_example}
  if [ "${_docu}" != "" ]; then
    echo "docu: ${_docu}"
  fi

  # execution
  if [ "${_help_indicator}" != "help" ]; then
    printf "\r${cyan}${_command}${color_off}\n"
    _result=`eval ${_command}`
  fi

  echo ${_result}
}

is_installed () {
  program_to_check=$1
  which ${program_to_check} > /dev/null
  if [ "$?" == "0" ]; then
    info "${program_to_check} already installed"
    return 0
  else
    return 1
  fi
}

is_installed_pip () {
  package_to_check=$1
  pip list | grep ${package_to_check} > /dev/null
  if [ "$?" == "0" ]; then
    info "${package_to_check} already installed"
    return 0
  else
    return 1
  fi
}

usage() {
  echo "example: ${1}"
}
